# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KSRaRH2MdIyZdVyS4fJTDj1H1tGZfPt2
"""

class Node:
    def __init__(self, roll_no, name, branch, marks):
        self.roll_no = roll_no
        self.name = name
        self.branch = branch
        self.marks = marks
        self.next = None

class StudentLinkedList:
    def __init__(self):
        self.head = None

    def check(self, roll_no):
        """Check if a record with the given roll number already exists."""
        current = self.head
        while current:
            if current.roll_no == roll_no:
                return True
            current = current.next
        return False

    def insert_record(self, roll_no, name, branch, marks):
        """Insert a new record into the linked list."""
        if self.check(roll_no):
            print("Record of this student already exists")
            return

        new_node = Node(roll_no, name, branch, marks)

        if self.head is None or self.head.roll_no >= roll_no:
            new_node.next = self.head
            self.head = new_node
        else:
            current = self.head
            while current.next and current.next.roll_no < roll_no:
                current = current.next
            new_node.next = current.next
            current.next = new_node

        print("Record Successfully Inserted")

    def search_record(self, roll_no):
        """Search for a record with the given roll number."""
        current = self.head
        while current:
            if current.roll_no == roll_no:
                print(f"Roll Number: {current.roll_no}")
                print(f"Name: {current.name}")
                print(f"Branch: {current.branch}")
                print(f"Marks: {current.marks}")
                return
            current = current.next
        print("No Such Records Available")

    def delete_record(self, roll_no):
        """Delete a record with the given roll number."""
        current = self.head
        previous = None

        if current and current.roll_no == roll_no:
            self.head = current.next
            del current
            print("Record Successfully Deleted")
            return

        while current and current.roll_no != roll_no:
            previous = current
            current = current.next

        if current is None:
            print("Record does not exist")
            return

        previous.next = current.next
        del current
        print("Record Successfully Deleted")

    def show_record(self):
        """Display all records in the linked list."""
        current = self.head
        if current is None:
            print("No Record Available")
            return

        print("RollNo\tName\tBranch\tMarks")
        while current:
            print(f"{current.roll_no}\t{current.name}\t{current.branch}\t{current.marks}")
            current = current.next

    def add_student(self):
        """Prompt the user for student details and add the record."""
        try:
            roll_no = int(input("Enter Roll Number: "))
            name = input("Enter Name: ")
            branch = input("Enter Branch: ")
            marks = float(input("Enter Marks: "))

            self.insert_record(roll_no, name, branch, marks)
        except ValueError:
            print("Invalid input. Please enter the correct data types.")

# Example Usage
if __name__ == "__main__":
    student_list = StudentLinkedList()

    while True:
        print("\nStudent Linked List Menu")
        print("1. Add Student Record")
        print("2. Search Student Record")
        print("3. Delete Student Record")
        print("4. Show All Records")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            student_list.add_student()
        elif choice == '2':
            roll_no = int(input("Enter Roll Number to Search: "))
            student_list.search_record(roll_no)
        elif choice == '3':
            roll_no = int(input("Enter Roll Number to Delete: "))
            student_list.delete_record(roll_no)
        elif choice == '4':
            student_list.show_record()
        elif choice == '5':
            break
        else:
            print("Invalid choice. Please try again.")

